basePath: /
consumes:
- application/json
definitions:
  GenericError:
    description: GenericError is a generic error message
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/zzibert/3fs-rest-api/handlers
  Group:
    description: Group defines the structure for an API group
    properties:
      id:
        description: the id of the group
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: the name for the group
        maxLength: 255
        type: string
        x-go-name: Name
      users:
        description: the list of users belonging to this group
        items:
          $ref: '#/definitions/User'
        type: array
        x-go-name: Users
    required:
    - name
    type: object
    x-go-package: github.com/zzibert/3fs-rest-api/data
  User:
    description: User defines the structure for an API User
    properties:
      email:
        description: the email of the user
        maxLength: 255
        type: string
        x-go-name: Email
      groupID:
        description: the id of the group that the user belongs to
        format: int64
        minimum: 1
        type: integer
        x-go-name: GroupID
      id:
        description: the id of the user
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: the name of the user
        maxLength: 255
        type: string
        x-go-name: Name
      password:
        description: the password of the user
        maxLength: 255
        type: string
        x-go-name: Password
    required:
    - name
    - email
    - password
    - groupID
    type: object
    x-go-package: github.com/zzibert/3fs-rest-api/data
info:
  description: Documentation for 3fs API
  title: 3fs API
  version: 1.0.0
paths:
  /groups:
    get:
      description: Return a list of groups from the database
      operationId: ListGroups
      responses:
        "200":
          $ref: '#/responses/groupsResponse'
      tags:
      - groups
    post:
      description: Create a new group
      operationId: createGroup
      responses:
        "200":
          $ref: '#/responses/groupResponse'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - groups
    put:
      description: Update a group
      operationId: updateGroup
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - groups
  /groups/{id}:
    delete:
      description: Delete a group
      operationId: deleteGroup
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - groups
    get:
      description: returns a single group from the database
      operationId: ListGroup
      responses:
        "200":
          $ref: '#/responses/groupResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - groups
  /users:
    get:
      description: Returns a list of users from the database
      operationId: ListUsers
      responses:
        "200":
          $ref: '#/responses/UsersResponse'
      tags:
      - users
    post:
      description: Create a new User
      operationId: createUser
      responses:
        "200":
          $ref: '#/responses/userResponse'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - users
    put:
      description: update an user
      operationId: updateUser
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - users
  /users/{id}:
    delete:
      description: Deletes an user from the database
      operationId: deleteUser
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - users
    get:
      description: Returns a single user from the database
      operationId: ListUser
      responses:
        "200":
          $ref: '#/responses/userResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - users
produces:
- application/json
responses:
  errorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  groupResponse:
    description: A single group
    schema:
      $ref: '#/definitions/Group'
  groupsResponse:
    description: A list of groups
    schema:
      items:
        $ref: '#/definitions/Group'
      type: array
  noContentResponse:
    description: No content is returned by this API endpoint
  userResponse:
    description: A single user
    schema:
      $ref: '#/definitions/User'
  usersResponse:
    description: A list of users
    schema:
      items:
        $ref: '#/definitions/User'
      type: array
schemes:
- http
swagger: "2.0"
